#include <boost/test/unit_test.hpp>

#include "../game.h"
#include "../gtp_lz_stub.h"

static const char* const sgf1 =
"(;CA[utf-8]GM[1]FF[4]RU[Chinese]SZ[19]OT[3x60 byo-yomi]EV[Google Deepmind Challenge Match]\n"
"RO[1]DT[2016-03-09]PC[Seoul, South Korea]PB[Lee Sedol]BR[9p]PW[AlphaGo]KM[7.5]TM[7200]\n"
"RE[W+R]\n"
";B[qd];W[dp];B[pq];W[dd];B[fc];W[cf];B[ql];W[od];B[ld];W[qc];B[rc];W[pc];B[re];W[of]\n"
";B[pg];W[og];B[ph];W[id];B[lf];W[oh];B[pi];W[lh];B[kh];W[ke];B[le];W[lg];B[kg];W[kf]\n"
";B[ne];W[oe];B[jc];W[ic];B[jd];W[ie];B[je];W[jf];B[if];W[jg];B[li];W[mi];B[hf];W[ih]\n"
";B[mb];W[gd];B[ki];W[mj];B[kk];W[ib];B[ob];W[ml];B[lm];W[nc];B[nb];W[kb];B[lc];W[mm]\n"
";B[ln];W[kl];B[ll];W[lk];B[jj];W[jl];B[hj];W[hi];B[gj];W[gf];B[ii];W[jh];B[ij];W[mn]\n"
";B[lo];W[mo];B[lp];W[mp];B[lq];W[mq];B[im];W[qo];B[fq];W[gg];B[cn];W[dn];B[dm];W[fp]\n"
";B[gp];W[gq];B[fr];W[co];B[en];W[do];B[ep];W[cm];B[dl];W[lr];B[kr];W[rb];B[jb];W[ja]\n"
";B[mf];W[mh];B[nd];W[qj];B[pj];W[qk];B[pl];W[pk];B[ok];W[rh];B[rl];W[qf];B[ri];W[rf]\n"
";B[pf];W[qe];B[qh];W[cc];B[bn];W[bm];B[bl];W[bo];B[rg];W[mr];B[po];W[jr];B[kq];W[pn]\n"
";B[oo];W[qp];B[on];W[pp];B[op];W[qq];B[or];W[pr];B[oq];W[pd];B[qr];W[rr];B[ps];W[rs]\n"
";B[rn];W[ro];B[qn];W[so];B[cl];W[an];B[ks];W[om];B[ol];W[ci];B[hh];W[hg];B[dr];W[dj]\n"
";B[bq];W[cq];B[cr];W[bp];B[dq];W[br];B[cp];W[ap];B[ek];W[fi];B[bj];W[bi];B[pb];W[qb]\n"
";B[sf];W[rd];B[ai];W[ah];B[aj];W[bh];B[gi];W[fj];B[fk];W[oc];B[mc];W[nm];B[pm];W[cj]\n"
";B[al];W[aq];B[gh];W[fh]C[Black resigned.])\n";

static const char* const sgf1_simplified =
"(;CA[utf-8]GM[1]FF[4]SZ[19]"
"PB[Lee Sedol]BR[9p]PW[AlphaGo]RE[W+R]KM[7.5]DT[2016-03-09]"
";B[qd];W[dp];B[pq];W[dd];B[fc];W[cf];B[ql];W[od];B[ld];W[qc];B[rc];W[pc];B[re];W[of]"
";B[pg];W[og];B[ph];W[id];B[lf];W[oh];B[pi];W[lh];B[kh];W[ke];B[le];W[lg];B[kg];W[kf]"
";B[ne];W[oe];B[jc];W[ic];B[jd];W[ie];B[je];W[jf];B[if];W[jg];B[li];W[mi];B[hf];W[ih]"
";B[mb];W[gd];B[ki];W[mj];B[kk];W[ib];B[ob];W[ml];B[lm];W[nc];B[nb];W[kb];B[lc];W[mm]"
";B[ln];W[kl];B[ll];W[lk];B[jj];W[jl];B[hj];W[hi];B[gj];W[gf];B[ii];W[jh];B[ij];W[mn]"
";B[lo];W[mo];B[lp];W[mp];B[lq];W[mq];B[im];W[qo];B[fq];W[gg];B[cn];W[dn];B[dm];W[fp]"
";B[gp];W[gq];B[fr];W[co];B[en];W[do];B[ep];W[cm];B[dl];W[lr];B[kr];W[rb];B[jb];W[ja]"
";B[mf];W[mh];B[nd];W[qj];B[pj];W[qk];B[pl];W[pk];B[ok];W[rh];B[rl];W[qf];B[ri];W[rf]"
";B[pf];W[qe];B[qh];W[cc];B[bn];W[bm];B[bl];W[bo];B[rg];W[mr];B[po];W[jr];B[kq];W[pn]"
";B[oo];W[qp];B[on];W[pp];B[op];W[qq];B[or];W[pr];B[oq];W[pd];B[qr];W[rr];B[ps];W[rs]"
";B[rn];W[ro];B[qn];W[so];B[cl];W[an];B[ks];W[om];B[ol];W[ci];B[hh];W[hg];B[dr];W[dj]"
";B[bq];W[cq];B[cr];W[bp];B[dq];W[br];B[cp];W[ap];B[ek];W[fi];B[bj];W[bi];B[pb];W[qb]"
";B[sf];W[rd];B[ai];W[ah];B[aj];W[bh];B[gi];W[fj];B[fk];W[oc];B[mc];W[nm];B[pm];W[cj]"
";B[al];W[aq];B[gh];W[fh])";

static const char* const gib1 =
"\\HS\n"
"\\[GAMEPLACE=Seoul, South Korea\\]\n"
"\\[GAMEWHITENAME=AlphaGo()\\]\n"
"\\[GAMEBLACKNAME=Lee Sedol(9p)\\]\n"
"\\[GAMECOMMENT=\\]\n"
"\\[GAMETAG=,W4,Z0,G75,C2016:03:09:04:00,\\]\n"
"\\HE\n"
"\\GS\n"
"2 1 0\n"
"186 1 &4\n"
"STO 0 0 1 16 3\n"
"STO 0 0 2 3 15\n"
"STO 0 0 1 15 16\n"
"STO 0 0 2 3 3\n"
"STO 0 0 1 5 2\n"
"STO 0 0 2 2 5\n"
"STO 0 0 1 16 11\n"
"STO 0 0 2 14 3\n"
"STO 0 0 1 11 3\n"
"STO 0 0 2 16 2\n"
"STO 0 0 1 17 2\n"
"STO 0 0 2 15 2\n"
"STO 0 0 1 17 4\n"
"STO 0 0 2 14 5\n"
"STO 0 0 1 15 6\n"
"STO 0 0 2 14 6\n"
"STO 0 0 1 15 7\n"
"STO 0 0 2 8 3\n"
"STO 0 0 1 11 5\n"
"STO 0 0 2 14 7\n"
"STO 0 0 1 15 8\n"
"STO 0 0 2 11 7\n"
"STO 0 0 1 10 7\n"
"STO 0 0 2 10 4\n"
"STO 0 0 1 11 4\n"
"STO 0 0 2 11 6\n"
"STO 0 0 1 10 6\n"
"STO 0 0 2 10 5\n"
"STO 0 0 1 13 4\n"
"STO 0 0 2 14 4\n"
"STO 0 0 1 9 2\n"
"STO 0 0 2 8 2\n"
"STO 0 0 1 9 3\n"
"STO 0 0 2 8 4\n"
"STO 0 0 1 9 4\n"
"STO 0 0 2 9 5\n"
"STO 0 0 1 8 5\n"
"STO 0 0 2 9 6\n"
"STO 0 0 1 11 8\n"
"STO 0 0 2 12 8\n"
"STO 0 0 1 7 5\n"
"STO 0 0 2 8 7\n"
"STO 0 0 1 12 1\n"
"STO 0 0 2 6 3\n"
"STO 0 0 1 10 8\n"
"STO 0 0 2 12 9\n"
"STO 0 0 1 10 10\n"
"STO 0 0 2 8 1\n"
"STO 0 0 1 14 1\n"
"STO 0 0 2 12 11\n"
"STO 0 0 1 11 12\n"
"STO 0 0 2 13 2\n"
"STO 0 0 1 13 1\n"
"STO 0 0 2 10 1\n"
"STO 0 0 1 11 2\n"
"STO 0 0 2 12 12\n"
"STO 0 0 1 11 13\n"
"STO 0 0 2 10 11\n"
"STO 0 0 1 11 11\n"
"STO 0 0 2 11 10\n"
"STO 0 0 1 9 9\n"
"STO 0 0 2 9 11\n"
"STO 0 0 1 7 9\n"
"STO 0 0 2 7 8\n"
"STO 0 0 1 6 9\n"
"STO 0 0 2 6 5\n"
"STO 0 0 1 8 8\n"
"STO 0 0 2 9 7\n"
"STO 0 0 1 8 9\n"
"STO 0 0 2 12 13\n"
"STO 0 0 1 11 14\n"
"STO 0 0 2 12 14\n"
"STO 0 0 1 11 15\n"
"STO 0 0 2 12 15\n"
"STO 0 0 1 11 16\n"
"STO 0 0 2 12 16\n"
"STO 0 0 1 8 12\n"
"STO 0 0 2 16 14\n"
"STO 0 0 1 5 16\n"
"STO 0 0 2 6 6\n"
"STO 0 0 1 2 13\n"
"STO 0 0 2 3 13\n"
"STO 0 0 1 3 12\n"
"STO 0 0 2 5 15\n"
"STO 0 0 1 6 15\n"
"STO 0 0 2 6 16\n"
"STO 0 0 1 5 17\n"
"STO 0 0 2 2 14\n"
"STO 0 0 1 4 13\n"
"STO 0 0 2 3 14\n"
"STO 0 0 1 4 15\n"
"STO 0 0 2 2 12\n"
"STO 0 0 1 3 11\n"
"STO 0 0 2 11 17\n"
"STO 0 0 1 10 17\n"
"STO 0 0 2 17 1\n"
"STO 0 0 1 9 1\n"
"STO 0 0 2 9 0\n"
"STO 0 0 1 12 5\n"
"STO 0 0 2 12 7\n"
"STO 0 0 1 13 3\n"
"STO 0 0 2 16 9\n"
"STO 0 0 1 15 9\n"
"STO 0 0 2 16 10\n"
"STO 0 0 1 15 11\n"
"STO 0 0 2 15 10\n"
"STO 0 0 1 14 10\n"
"STO 0 0 2 17 7\n"
"STO 0 0 1 17 11\n"
"STO 0 0 2 16 5\n"
"STO 0 0 1 17 8\n"
"STO 0 0 2 17 5\n"
"STO 0 0 1 15 5\n"
"STO 0 0 2 16 4\n"
"STO 0 0 1 16 7\n"
"STO 0 0 2 2 2\n"
"STO 0 0 1 1 13\n"
"STO 0 0 2 1 12\n"
"STO 0 0 1 1 11\n"
"STO 0 0 2 1 14\n"
"STO 0 0 1 17 6\n"
"STO 0 0 2 12 17\n"
"STO 0 0 1 15 14\n"
"STO 0 0 2 9 17\n"
"STO 0 0 1 10 16\n"
"STO 0 0 2 15 13\n"
"STO 0 0 1 14 14\n"
"STO 0 0 2 16 15\n"
"STO 0 0 1 14 13\n"
"STO 0 0 2 15 15\n"
"STO 0 0 1 14 15\n"
"STO 0 0 2 16 16\n"
"STO 0 0 1 14 17\n"
"STO 0 0 2 15 17\n"
"STO 0 0 1 14 16\n"
"STO 0 0 2 15 3\n"
"STO 0 0 1 16 17\n"
"STO 0 0 2 17 17\n"
"STO 0 0 1 15 18\n"
"STO 0 0 2 17 18\n"
"STO 0 0 1 17 13\n"
"STO 0 0 2 17 14\n"
"STO 0 0 1 16 13\n"
"STO 0 0 2 18 14\n"
"STO 0 0 1 2 11\n"
"STO 0 0 2 0 13\n"
"STO 0 0 1 10 18\n"
"STO 0 0 2 14 12\n"
"STO 0 0 1 14 11\n"
"STO 0 0 2 2 8\n"
"STO 0 0 1 7 7\n"
"STO 0 0 2 7 6\n"
"STO 0 0 1 3 17\n"
"STO 0 0 2 3 9\n"
"STO 0 0 1 1 16\n"
"STO 0 0 2 2 16\n"
"STO 0 0 1 2 17\n"
"STO 0 0 2 1 15\n"
"STO 0 0 1 3 16\n"
"STO 0 0 2 1 17\n"
"STO 0 0 1 2 15\n"
"STO 0 0 2 0 15\n"
"STO 0 0 1 4 10\n"
"STO 0 0 2 5 8\n"
"STO 0 0 1 1 9\n"
"STO 0 0 2 1 8\n"
"STO 0 0 1 15 1\n"
"STO 0 0 2 16 1\n"
"STO 0 0 1 18 5\n"
"STO 0 0 2 17 3\n"
"STO 0 0 1 0 8\n"
"STO 0 0 2 0 7\n"
"STO 0 0 1 0 9\n"
"STO 0 0 2 1 7\n"
"STO 0 0 1 6 8\n"
"STO 0 0 2 5 9\n"
"STO 0 0 1 5 10\n"
"STO 0 0 2 14 2\n"
"STO 0 0 1 12 2\n"
"STO 0 0 2 13 12\n"
"STO 0 0 1 15 12\n"
"STO 0 0 2 2 9\n"
"STO 0 0 1 0 11\n"
"STO 0 0 2 0 16\n"
"STO 0 0 1 6 7\n"
"STO 0 0 2 5 7\n"
"\\GE\n";

static const char* const ngf1 =
"\n"
"19\n"
"AlphaGo     \n"
"Lee Sedol   9DP\n"
"www.example.com\n"
"0\n"
"0\n"
"7\n"
"20160309\n"
"5\n"
"White wins by resignation!\n"
"186\n"
"PMABBREER\n"
"PMACWEQQE\n"
"PMADBQRRQ\n"
"PMAEWEEEE\n"
"PMAFBGDDG\n"
"PMAGWDGGD\n"
"PMAHBRMMR\n"
"PMAIWPEEP\n"
"PMAJBMEEM\n"
"PMAKWRDDR\n"
"PMALBSDDS\n"
"PMAMWQDDQ\n"
"PMANBSFFS\n"
"PMAOWPGGP\n"
"PMAPBQHHQ\n"
"PMAQWPHHP\n"
"PMARBQIIQ\n"
"PMASWJEEJ\n"
"PMATBMGGM\n"
"PMAUWPIIP\n"
"PMAVBQJJQ\n"
"PMAWWMIIM\n"
"PMAXBLIIL\n"
"PMAYWLFFL\n"
"PMAZBMFFM\n"
"PMBAWMHHM\n"
"PMBBBLHHL\n"
"PMBCWLGGL\n"
"PMBDBOFFO\n"
"PMBEWPFFP\n"
"PMBFBKDDK\n"
"PMBGWJDDJ\n"
"PMBHBKEEK\n"
"PMBIWJFFJ\n"
"PMBJBKFFK\n"
"PMBKWKGGK\n"
"PMBLBJGGJ\n"
"PMBMWKHHK\n"
"PMBNBMJJM\n"
"PMBOWNJJN\n"
"PMBPBIGGI\n"
"PMBQWJIIJ\n"
"PMBRBNCCN\n"
"PMBSWHEEH\n"
"PMBTBLJJL\n"
"PMBUWNKKN\n"
"PMBVBLLLL\n"
"PMBWWJCCJ\n"
"PMBXBPCCP\n"
"PMBYWNMMN\n"
"PMBZBMNNM\n"
"PMCAWODDO\n"
"PMCBBOCCO\n"
"PMCCWLCCL\n"
"PMCDBMDDM\n"
"PMCEWNNNN\n"
"PMCFBMOOM\n"
"PMCGWLMML\n"
"PMCHBMMMM\n"
"PMCIWMLLM\n"
"PMCJBKKKK\n"
"PMCKWKMMK\n"
"PMCLBIKKI\n"
"PMCMWIJJI\n"
"PMCNBHKKH\n"
"PMCOWHGGH\n"
"PMCPBJJJJ\n"
"PMCQWKIIK\n"
"PMCRBJKKJ\n"
"PMCSWNOON\n"
"PMCTBMPPM\n"
"PMCUWNPPN\n"
"PMCVBMQQM\n"
"PMCWWNQQN\n"
"PMCXBMRRM\n"
"PMCYWNRRN\n"
"PMCZBJNNJ\n"
"PMDAWRPPR\n"
"PMDBBGRRG\n"
"PMDCWHHHH\n"
"PMDDBDOOD\n"
"PMDEWEOOE\n"
"PMDFBENNE\n"
"PMDGWGQQG\n"
"PMDHBHQQH\n"
"PMDIWHRRH\n"
"PMDJBGSSG\n"
"PMDKWDPPD\n"
"PMDLBFOOF\n"
"PMDMWEPPE\n"
"PMDNBFQQF\n"
"PMDOWDNND\n"
"PMDPBEMME\n"
"PMDQWMSSM\n"
"PMDRBLSSL\n"
"PMDSWSCCS\n"
"PMDTBKCCK\n"
"PMDUWKBBK\n"
"PMDVBNGGN\n"
"PMDWWNIIN\n"
"PMDXBOEEO\n"
"PMDYWRKKR\n"
"PMDZBQKKQ\n"
"PMEAWRLLR\n"
"PMEBBQMMQ\n"
"PMECWQLLQ\n"
"PMEDBPLLP\n"
"PMEEWSIIS\n"
"PMEFBSMMS\n"
"PMEGWRGGR\n"
"PMEHBSJJS\n"
"PMEIWSGGS\n"
"PMEJBQGGQ\n"
"PMEKWRFFR\n"
"PMELBRIIR\n"
"PMEMWDDDD\n"
"PMENBCOOC\n"
"PMEOWCNNC\n"
"PMEPBCMMC\n"
"PMEQWCPPC\n"
"PMERBSHHS\n"
"PMESWNSSN\n"
"PMETBQPPQ\n"
"PMEUWKSSK\n"
"PMEVBLRRL\n"
"PMEWWQOOQ\n"
"PMEXBPPPP\n"
"PMEYWRQQR\n"
"PMEZBPOOP\n"
"PMFAWQQQQ\n"
"PMFBBPQQP\n"
"PMFCWRRRR\n"
"PMFDBPSSP\n"
"PMFEWQSSQ\n"
"PMFFBPRRP\n"
"PMFGWQEEQ\n"
"PMFHBRSSR\n"
"PMFIWSSSS\n"
"PMFJBQTTQ\n"
"PMFKWSTTS\n"
"PMFLBSOOS\n"
"PMFMWSPPS\n"
"PMFNBROOR\n"
"PMFOWTPPT\n"
"PMFPBDMMD\n"
"PMFQWBOOB\n"
"PMFRBLTTL\n"
"PMFSWPNNP\n"
"PMFTBPMMP\n"
"PMFUWDJJD\n"
"PMFVBIIII\n"
"PMFWWIHHI\n"
"PMFXBESSE\n"
"PMFYWEKKE\n"
"PMFZBCRRC\n"
"PMGAWDRRD\n"
"PMGBBDSSD\n"
"PMGCWCQQC\n"
"PMGDBERRE\n"
"PMGEWCSSC\n"
"PMGFBDQQD\n"
"PMGGWBQQB\n"
"PMGHBFLLF\n"
"PMGIWGJJG\n"
"PMGJBCKKC\n"
"PMGKWCJJC\n"
"PMGLBQCCQ\n"
"PMGMWRCCR\n"
"PMGNBTGGT\n"
"PMGOWSEES\n"
"PMGPBBJJB\n"
"PMGQWBIIB\n"
"PMGRBBKKB\n"
"PMGSWCIIC\n"
"PMGTBHJJH\n"
"PMGUWGKKG\n"
"PMGVBGLLG\n"
"PMGWWPDDP\n"
"PMGXBNDDN\n"
"PMGYWONNO\n"
"PMGZBQNNQ\n"
"PMHAWDKKD\n"
"PMHBBBMMB\n"
"PMHCWBRRB\n"
"PMHDBHIIH\n"
"PMHEWGIIG\n";

static const char* const ugf1 =
"[Header]\n"
"Ver=UGF3,200\n"
"Lang=SJIS\n"
"Crypt=0,PLAIN_UGF_FILE,READ_WRITE\n"
"Code=\n"
"Title=,Google Deepmind Challenge Match,1\n"
"Place=Seoul\n"
"Date=2016-03-09,,,\n"
"Rule=CHN\n"
"Size=19\n"
"Hdcp=0,7.5\n"
"Ptime=J;120;0;0,J;120;0;0,,\n"
"Winner=W,C\n"
"Writer=\n"
"Copyright=\n"
"CoordinateType=JPN\n"
"Comment=\n"
"PlayerB=Lee Sedol,9p,\n"
"PlayerW=AlphaGo,,\n"
"[Data]\n"
"QD,B1,1,0\n"
"DP,W1,2,0\n"
"PQ,B1,3,0\n"
"DD,W1,4,0\n"
"FC,B1,5,0\n"
"CF,W1,6,0\n"
"QL,B1,7,0\n"
"OD,W1,8,0\n"
"LD,B1,9,0\n"
"QC,W1,10,0\n"
"RC,B1,11,0\n"
"PC,W1,12,0\n"
"RE,B1,13,0\n"
"OF,W1,14,0\n"
"PG,B1,15,0\n"
"OG,W1,16,0\n"
"PH,B1,17,0\n"
"ID,W1,18,0\n"
"LF,B1,19,0\n"
"OH,W1,20,0\n"
"PI,B1,21,0\n"
"LH,W1,22,0\n"
"KH,B1,23,0\n"
"KE,W1,24,0\n"
"LE,B1,25,0\n"
"LG,W1,26,0\n"
"KG,B1,27,0\n"
"KF,W1,28,0\n"
"NE,B1,29,0\n"
"OE,W1,30,0\n"
"JC,B1,31,0\n"
"IC,W1,32,0\n"
"JD,B1,33,0\n"
"IE,W1,34,0\n"
"JE,B1,35,0\n"
"JF,W1,36,0\n"
"IF,B1,37,0\n"
"JG,W1,38,0\n"
"LI,B1,39,0\n"
"MI,W1,40,0\n"
"HF,B1,41,0\n"
"IH,W1,42,0\n"
"MB,B1,43,0\n"
"GD,W1,44,0\n"
"KI,B1,45,0\n"
"MJ,W1,46,0\n"
"KK,B1,47,0\n"
"IB,W1,48,0\n"
"OB,B1,49,0\n"
"ML,W1,50,0\n"
"LM,B1,51,0\n"
"NC,W1,52,0\n"
"NB,B1,53,0\n"
"KB,W1,54,0\n"
"LC,B1,55,0\n"
"MM,W1,56,0\n"
"LN,B1,57,0\n"
"KL,W1,58,0\n"
"LL,B1,59,0\n"
"LK,W1,60,0\n"
"JJ,B1,61,0\n"
"JL,W1,62,0\n"
"HJ,B1,63,0\n"
"HI,W1,64,0\n"
"GJ,B1,65,0\n"
"GF,W1,66,0\n"
"II,B1,67,0\n"
"JH,W1,68,0\n"
"IJ,B1,69,0\n"
"MN,W1,70,0\n"
"LO,B1,71,0\n"
"MO,W1,72,0\n"
"LP,B1,73,0\n"
"MP,W1,74,0\n"
"LQ,B1,75,0\n"
"MQ,W1,76,0\n"
"IM,B1,77,0\n"
"QO,W1,78,0\n"
"FQ,B1,79,0\n"
"GG,W1,80,0\n"
"CN,B1,81,0\n"
"DN,W1,82,0\n"
"DM,B1,83,0\n"
"FP,W1,84,0\n"
"GP,B1,85,0\n"
"GQ,W1,86,0\n"
"FR,B1,87,0\n"
"CO,W1,88,0\n"
"EN,B1,89,0\n"
"DO,W1,90,0\n"
"EP,B1,91,0\n"
"CM,W1,92,0\n"
"DL,B1,93,0\n"
"LR,W1,94,0\n"
"KR,B1,95,0\n"
"RB,W1,96,0\n"
"JB,B1,97,0\n"
"JA,W1,98,0\n"
"MF,B1,99,0\n"
"MH,W1,100,0\n"
"ND,B1,101,0\n"
"QJ,W1,102,0\n"
"PJ,B1,103,0\n"
"QK,W1,104,0\n"
"PL,B1,105,0\n"
"PK,W1,106,0\n"
"OK,B1,107,0\n"
"RH,W1,108,0\n"
"RL,B1,109,0\n"
"QF,W1,110,0\n"
"RI,B1,111,0\n"
"RF,W1,112,0\n"
"PF,B1,113,0\n"
"QE,W1,114,0\n"
"QH,B1,115,0\n"
"CC,W1,116,0\n"
"BN,B1,117,0\n"
"BM,W1,118,0\n"
"BL,B1,119,0\n"
"BO,W1,120,0\n"
"RG,B1,121,0\n"
"MR,W1,122,0\n"
"PO,B1,123,0\n"
"JR,W1,124,0\n"
"KQ,B1,125,0\n"
"PN,W1,126,0\n"
"OO,B1,127,0\n"
"QP,W1,128,0\n"
"ON,B1,129,0\n"
"PP,W1,130,0\n"
"OP,B1,131,0\n"
"QQ,W1,132,0\n"
"OR,B1,133,0\n"
"PR,W1,134,0\n"
"OQ,B1,135,0\n"
"PD,W1,136,0\n"
"QR,B1,137,0\n"
"RR,W1,138,0\n"
"PS,B1,139,0\n"
"RS,W1,140,0\n"
"RN,B1,141,0\n"
"RO,W1,142,0\n"
"QN,B1,143,0\n"
"SO,W1,144,0\n"
"CL,B1,145,0\n"
"AN,W1,146,0\n"
"KS,B1,147,0\n"
"OM,W1,148,0\n"
"OL,B1,149,0\n"
"CI,W1,150,0\n"
"HH,B1,151,0\n"
"HG,W1,152,0\n"
"DR,B1,153,0\n"
"DJ,W1,154,0\n"
"BQ,B1,155,0\n"
"CQ,W1,156,0\n"
"CR,B1,157,0\n"
"BP,W1,158,0\n"
"DQ,B1,159,0\n"
"BR,W1,160,0\n"
"CP,B1,161,0\n"
"AP,W1,162,0\n"
"EK,B1,163,0\n"
"FI,W1,164,0\n"
"BJ,B1,165,0\n"
"BI,W1,166,0\n"
"PB,B1,167,0\n"
"QB,W1,168,0\n"
"SF,B1,169,0\n"
"RD,W1,170,0\n"
"AI,B1,171,0\n"
"AH,W1,172,0\n"
"AJ,B1,173,0\n"
"BH,W1,174,0\n"
"GI,B1,175,0\n"
"FJ,W1,176,0\n"
"FK,B1,177,0\n"
"OC,W1,178,0\n"
"MC,B1,179,0\n"
"NM,W1,180,0\n"
"PM,B1,181,0\n"
"CJ,W1,182,0\n"
"AL,B1,183,0\n"
"AQ,W1,184,0\n"
"GH,B1,185,0\n"
"FH,W1,186,0\n";

static const char* const cmd0 =
"boardsize 19\n"
"komi 7.5\n"
"time_settings 3600000 0 0\n";

static const char* const cmd1 =
"boardsize 19\n"
"komi 7.5\n"
"time_settings 3600000 0 0\n"
"play b R16\n"
"play w D4\n";

// Windowsでかつ日本語設定でないと通らないテストは
// 海外の人から苦情が来ないように必要なといとき以外は無効にする

// #define TEST_SJIS

#ifdef TEST_SJIS

static const char* const sgf2 =
"(;GM[1]CA[shift_jis]AB[dp][pd][dd]SZ[19]FF[4]PB[黒さん]PW[白さん]\n"
"HA[3]RE[B+30];W[pp];B[tt];W[tt](;B[qn];W[nq];B[tt])(;B[nq];W[qn]))";

static const char* const sgf2_simplified =
u8"(;CA[utf-8]GM[1]FF[4]SZ[19]PB[黒さん]PW[白さん]"
"RE[B+30]KM[0]HA[3]AB[dp][pd][dd];W[pp];B[];W[];B[qn];W[nq])";

static const char* const gib2 =
"\\HS\n"
"\\[GIBOKIND=Japan\\]\n"
"\\[TYPE=0\\]\n"
"\\[GAMEWHITENAME=白さん()\\]\n"
"\\[GAMEBLACKNAME=黒さん()\\]\n"
"\\[GAMETAG=,W0,Z300,G0,\\]\n"
"\\HE\n"
"\\GS\n"
"2 1 0\n"
"7 1 &4\n"
"INI 0 1 3 &4\n"
"STO 0 2 2 15 15\n"
"STO 0 3 1 19 19\n"
"STO 0 4 2 19 19\n"
"STO 0 5 1 16 13\n"
"STO 0 6 2 13 16\n"
"STO 0 7 1 19 19\n"
"\\GE\n";

static const char* const ngf2 =
"\n"
"19\n"
"白さん\n"
"黒さん\n"
"www.example.com\n"
"3\n"
"0\n"
"0\n"
"\n"
"5\n"
"Black wins by 30 points!\n"
"6\n"
"PMABWQQQQ\n"
"PMACBAAAA\n"
"PMADWAAAA\n"
"PMAEBROOR\n"
"PMAFWORRO\n"
"PMAGBAAAA\n";

static const char* const ugf2 =
"[Header]\n"
"Ver=UGF3,200\n"
"Lang=SJIS\n"
"Crypt=0,PLAIN_UGF_FILE,READ_WRITE\n"
"Code=\n"
"Title=,,\n"
"Place=\n"
"Date=,,,\n"
"Rule=JPN\n"
"Size=19\n"
"Hdcp=0,0\n"
"Ptime=,,,\n"
"Winner=B,30.0\n"
"Writer=\n"
"Copyright=\n"
"CoordinateType=JPN\n"
"Comment=\n"
"PlayerB=黒さん,,\n"
"PlayerW=白さん,,\n"
"[Remote]\n"
"[Files]\n"
"[Data]\n"
"DP,B1,0,0\n"
"PD,B1,0,0\n"
"DD,B1,0,0\n"
"PP,W1,1,0\n"
"YA,B1,2,0\n"
"YA,W1,3,0\n"
"QN,B1,4,0\n"
"NQ,W1,5,0\n"
"YA,B1,6,0\n"
"[Figure]\n"
".Fig,3,1,1,19,19,解説譜,1,0\n"
"DD,B1,0,0\n"
"PD,B1,0,0\n"
"DP,B1,0,0\n"
"PP,W1,0,0\n"
"NQ,B1,1,0\n"
"QN,W1,2,0\n"
".Text\n"
".EndText\n"
".EndFig\n";

static const char* const cmd2 =
"boardsize 19\n"
"komi 0\n"
"time_settings 3600000 0 0\n"
"play b D4\n"
"play b Q16\n"
"play b D16\n"
"play w Q4\n"
"play b pass\n"
"play w pass\n"
"play b R6\n"
"play w O3\n";

#endif

BOOST_AUTO_TEST_CASE(Game_Test)
{
	{
		Game gameS;
		BOOST_CHECK(gameS.readSgf(sgf1, "UTF-8"));
		BOOST_CHECK_EQUAL(gameS.sgfStr(), sgf1_simplified);
		Game gameG;
		BOOST_CHECK(gameG.readGib(gib1, "UTF-8"));
		BOOST_CHECK_EQUAL(gameG.sgfStr(), sgf1_simplified);
		Game gameN;
		BOOST_CHECK(gameN.readNgf(ngf1, "UTF-8"));
		BOOST_CHECK_EQUAL(gameN.sgfStr(), sgf1_simplified);
		Game gameU;
		BOOST_CHECK(gameU.readUgf(ugf1, "UTF-8"));
		BOOST_CHECK_EQUAL(gameU.sgfStr(), sgf1_simplified);

		GtpLzStub gtp0;
		gameS.go(0, gtp0);
		BOOST_CHECK_EQUAL(gtp0.str(), cmd0);
		GtpLzStub gtp1;
		gameS.go(2, gtp1);
		BOOST_CHECK_EQUAL(gtp1.str(), cmd1);
	}

#ifdef TEST_SJIS
	{
		Game gameS;
		BOOST_CHECK(gameS.readSgf(sgf2, "UTF-8"));
		BOOST_CHECK_EQUAL(gameS.sgfStr(), sgf2_simplified);
		Game gameG;
		BOOST_CHECK(gameG.readGib(gib2, "UTF-8"));
		BOOST_CHECK_EQUAL(gameG.sgfStr(), sgf2_simplified);
		Game gameN;
		BOOST_CHECK(gameN.readNgf(ngf2, "Shift_JIS"));
		BOOST_CHECK_EQUAL(gameN.sgfStr(), sgf2_simplified);
		Game gameU;
		BOOST_CHECK(gameU.readUgf(ugf2, "UTF-8"));
		BOOST_CHECK_EQUAL(gameU.sgfStr(), sgf2_simplified);

		GtpLzStub gtp2;
		gameS.go(100, gtp2);
		BOOST_CHECK_EQUAL(gtp2.str(), cmd2);
		GtpLzStub gtpUndo;
		gameS.undo(gtpUndo);
		BOOST_CHECK_EQUAL(gtpUndo.str(), "undo\n");
	}
#endif
}
